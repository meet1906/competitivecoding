RECURSION

Func which calls itself
Bulb and rubberband example

void func()
{
	statement 1 ---> this will be execeuted at calling time. (before - calling time)
	func()
	statement 2 ----> this will be execeuted at return time. (after - return time)
}

recursion vs loops
difference -> loops will only have ascending phase but recursion will have both ascending and descending phase.

How recursion uses stack?
Total calls -> n+1
Total memory consumption - O(N)
 
Time complexity -> time depends on value passed so --> O(N)
Otherwise its calculated using recurrence relations.
T(n)=T(n-1)+1.

Types of recursion :
Tail -->  func last
Head ---> func first
Indirect -->  (1-2-3-1)
Tree -> Make and Trace to find the appropriate o/p.
Nested -> fact(fact(n-1))

Excersive recursion - when same recursive fun calls multiple times for same values 
Memoiasation - storing results of func call in recursive func 